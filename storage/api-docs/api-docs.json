{
    "openapi": "3.0.0",
    "info": {
        "title": "Elagi",
        "description": "API documentation for Elagi project",
        "contact": {
            "email": "devyousefm@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send OTP for password reset",
                "operationId": "934a0289cf586e78035a2d81ccdad9bc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP generated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user and return token",
                "operationId": "91172b070eb43503bc40d8bfea9def82",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLC..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The password you entered is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We couldn't find an account with that email address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "ba1d3aa2c8ca21a441b9f2e2eaaa6890",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have been successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user and send OTP",
                "operationId": "71d4bcff68fc14dd72f35ab9ff6d9d19",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "email",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "01234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email must be a valid Gmail address."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resend-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend OTP for user registration",
                "operationId": "7f8182f2e7672d78d7c526116de9412c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP has been resent to your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No registration data found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No registration data found for the provided email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password using OTP",
                "operationId": "6ea9208c9f475f56f7a2a0957d14fffe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp",
                                    "newPassword"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newSecret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user data",
                "operationId": "514858f3d308b28ba7c4f6ddcf776d96",
                "responses": {
                    "200": {
                        "description": "Authenticated user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "01234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update authenticated user's profile",
                "operationId": "4c72c635f801f0134b7f351e90f3498f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "01234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully!"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "01234567890"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/validate-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Validate JWT token",
                "operationId": "33d30717e0f7b59f383e6740ec1a889e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token is valid"
                                        },
                                        "user": {
                                            "description": "Authenticated user data",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Token not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token not provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify OTP and create a user account",
                "operationId": "037401cbc10a6503ef8ecebc44b0597e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "otp": {
                                        "type": "integer",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified and user account created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully. Account created."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cart/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the authenticated user's cart",
                "operationId": "14f5e51d7db39a28ab03dca3c241f3b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to add",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "quantity": {
                                        "description": "Quantity to add (minimum 1)",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/clear": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear all items from the authenticated user's cart",
                "operationId": "ffdfc86a135647545cc4b941ddad7493",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get authenticated user's cart items",
                "operationId": "5171f61585f1a8055caac815910dfc06",
                "responses": {
                    "200": {
                        "description": "List of cart items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "product_id": {
                                                "type": "integer",
                                                "example": 100
                                            },
                                            "product": {
                                                "description": "Related product details",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Sample Product"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 29.99
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/quantity": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get total quantity of items in the authenticated user's cart",
                "operationId": "f9d59a1d815b69dbd1f0379e1487d2b9",
                "responses": {
                    "200": {
                        "description": "Total quantity retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "quantity": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/{cartItem}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove a specific cart item",
                "operationId": "f7bdace470cb9ec50c95507a85bfec34",
                "parameters": [
                    {
                        "name": "cartItem",
                        "in": "path",
                        "description": "ID of the cart item to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update quantity of a specific cart item",
                "operationId": "ccb2419dfe2c5aefe623db2ddf9cedc4",
                "parameters": [
                    {
                        "name": "cartItem",
                        "in": "path",
                        "description": "ID of the cart item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/contacts/{id}": {
            "delete": {
                "tags": [
                    "Contact"
                ],
                "summary": "Delete a contact message by ID",
                "operationId": "abc25ed5d66bea1fe3c442266f46fc14",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Get list of all contact messages",
                "operationId": "e68d26fedebe123fe3c24112163084b4",
                "responses": {
                    "200": {
                        "description": "List of contact messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john@example.com"
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Hello, I need support..."
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contact/save": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Save a new contact message",
                "operationId": "6d1243b5b32bed60d6c910e58f8d0745",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "message"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Hello, I need support with..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message sent successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "email": [
                                        "The email field is required."
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dashboard/chart-data": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard chart data",
                "operationId": "b0f493a8781284b8199df58d1d03523a",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/medicines": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get total medicines count",
                "operationId": "8329bd6df4dd62ea1bff6d6068a81373",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/orders": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get total orders count",
                "operationId": "567f441107d261c3cc77a4fd6ddfde02",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/users": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get total user count",
                "operationId": "dd01d1dc2315a34652088957ce922e3b",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/most-sold-medicines": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get most sold medicines",
                "operationId": "4adae5b5d4c5d520d5b1a5d229203c02",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/sales-revenue": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get sales revenue by date",
                "operationId": "2f09afd7b5218bf184b6f6b598f4eb3e",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/total-sales-revenue": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get total sales revenue",
                "operationId": "33816eed129712e77f13ae16f22d488a",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/dashboard/user-registrations": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get user registrations over time",
                "operationId": "ed682bfd2217033fe0a33a3c1337f3c7",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/donate": {
            "post": {
                "tags": [
                    "Donation"
                ],
                "summary": "Initiate a donation payment",
                "operationId": "e3749608c98aac97b0f2c86a12b0d4c2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Donation amount",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 1,
                                        "example": 50
                                    },
                                    "donor_name": {
                                        "description": "Name of the donor (optional)",
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment URL returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentUrl": {
                                            "type": "string",
                                            "example": "https://accept.paymob.com/api/acceptance/iframes/123456?payment_token=abc123xyz"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": []
            }
        },
        "/api/favorites/add/{productId}": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Add a product to favorites",
                "operationId": "445ba0ed54f17447a9b9a32ee7f5b52a",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of product to add to favorites",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added to favorites"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "409": {
                        "description": "Already in favorites"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/clear": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Clear all favorites for the authenticated user",
                "operationId": "1c8b3735f893b28d818299d92695e2f5",
                "responses": {
                    "200": {
                        "description": "All favorites cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All favorites cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "List all favorites for the authenticated user",
                "operationId": "ec71fc81eb64f969d97f882b434b5a44",
                "responses": {
                    "200": {
                        "description": "List of favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FavoriteWithProduct"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/remove/{id}": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove a product from favorites",
                "operationId": "42d3191dbed0ef5a96d2c7560254db6a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID to remove from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from favorites"
                    },
                    "404": {
                        "description": "Favorite not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/approveFeedback/{id}": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Approve (unpin) a feedback",
                "operationId": "d4c608b8cf801afffbe7515bc8aae5e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID to approve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback approved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback approved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Feedback not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/feedbacks/{id}": {
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete a feedback",
                "operationId": "6f8568f4154d78f9d2f354c14b8aaf56",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Feedback not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pinnedFeedbacks": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get pinned feedback",
                "operationId": "052cfdaa70aa3175dc1173da82d54813",
                "responses": {
                    "200": {
                        "description": "List of pinned feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feedback"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ignoreFeedback/{id}": {
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Ignore and delete a feedback",
                "operationId": "a9a561f7945f2b6f8895d6c164dfd7a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID to ignore and delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback ignored and deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback ignored and deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Feedback not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/feedbacks": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all feedback",
                "operationId": "db64463d051a5be8cfeda0d30d428e05",
                "responses": {
                    "200": {
                        "description": "List of all feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feedback"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/feedback": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all unpinned feedback",
                "operationId": "5af2691d005beb462f4e8c49bcf51c90",
                "responses": {
                    "200": {
                        "description": "List of unpinned feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feedback"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Submit feedback",
                "operationId": "2cceff69cdbc2ee1a0a02e7affa728d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "feedback",
                                    "rating"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "feedback": {
                                        "type": "string",
                                        "example": "Great service!"
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 4
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback submitted and awaiting approval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback received and awaiting approval"
                                        },
                                        "feedback": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "feedback": {
                                                    "type": "string"
                                                },
                                                "rating": {
                                                    "type": "integer"
                                                },
                                                "is_pinned": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/dashlogin": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Admin login",
                "operationId": "fa0f428e63204575a844a68d7047f255",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized (not admin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No account found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/store-rare-medicine": {
            "post": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Submit a rare medicine request",
                "operationId": "e4b514d12e0c91878d671063a26d78ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address",
                                    "medicine_name",
                                    "quantity"
                                ],
                                "properties": {
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "medicine_name": {
                                        "type": "string",
                                        "example": "Paracetamol"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request submitted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/upload-medicalTest": {
            "post": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Upload medical test file or input calcium level for analysis",
                "operationId": "8bfb48c545c8a4ac5d8cc84d34adffd0",
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Medical test file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "calciumLevel": {
                                        "description": "Calcium level input if no file is provided",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Analysis result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Processing failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/upload-prescription": {
            "post": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Upload prescription image and extract medicine names",
                "operationId": "a7a6b07fa66e8c995107fcd16732395d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Prescription image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Extraction result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "found": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "stock": {
                                                        "type": "integer"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "notFoundAndAlternatives": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "notFoundName": {
                                                        "type": "string"
                                                    },
                                                    "alternative": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "stock": {
                                                                "type": "integer"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "OCR processing failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/medicines/category/{categorySlug}": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Get paginated list of medicines by category slug",
                "operationId": "7355a30d4d770da583a539aee472223f",
                "parameters": [
                    {
                        "name": "categorySlug",
                        "in": "path",
                        "description": "Category slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of medicines in given category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Medicine"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/medicines": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Get paginated list of medicines with optional sorting",
                "operationId": "be3ab11cdd2d8f4ff0adb34807d4d6f2",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting option: price_asc, price_desc, name_asc, name_desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "price_asc",
                                "price_desc",
                                "name_asc",
                                "name_desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of medicines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Medicine"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/medicines/{product}": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Get details of a medicine by ID",
                "operationId": "2f665a797422c667e6a0574259c24feb",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Medicine ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medicine details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Medicine"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Medicine not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Medicine not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notifications/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification details and mark as read",
                "operationId": "7e9f86fe783925a899e12e84d56aaf82",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardNotification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete a notification",
                "operationId": "a7fb1e932cffcf1adefe2fbeef40c7b2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get all notifications",
                "operationId": "976817c85f490017521dffb3c8cc1875",
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DashboardNotification"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/notifications/mark-all-read": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as read",
                "operationId": "1f0a1279a22d09cf6f7b7e2d9110de04",
                "responses": {
                    "200": {
                        "description": "All notifications marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/notifications/mark-all-unread": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as unread",
                "operationId": "742bdc81485b3798d4c27255bee62259",
                "responses": {
                    "200": {
                        "description": "All notifications marked as unread",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as unread"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/notifications/{id}/read": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "operationId": "49df448c9fffe385414aa40852bd2afa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardNotification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/notifications/{id}/unread": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as unread",
                "operationId": "b184ffd230031c4ed544b466f9e45d20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as unread",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardNotification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/checkout": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Place a new order (checkout)",
                "operationId": "b2aca7727917cd1e86195d3390501577",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address",
                                    "paymentMethod",
                                    "cartItems"
                                ],
                                "properties": {
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City"
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "enum": [
                                            "cash",
                                            "card"
                                        ],
                                        "example": "card"
                                    },
                                    "cartItems": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "product_id",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order placed or payment url returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Order placed successfully"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "paymentUrl": {
                                                    "type": "string",
                                                    "example": "https://paymentgateway.com/pay?token=xyz"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Order placement failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dorders/{order}": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an order",
                "operationId": "dfa34f6659e85a4682321cdc99a67545",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "shipped"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "operationId": "3eeee464e4f0a07f7e52f8ebbc8e4f52",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get authenticated user's orders with items",
                "operationId": "5206d9232f6ac55d8dcb3b848494858a",
                "responses": {
                    "200": {
                        "description": "List of orders with items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "address": {
                                                "type": "string"
                                            },
                                            "total_price": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "medicine_name": {
                                                            "type": "string"
                                                        },
                                                        "quantity": {
                                                            "type": "integer"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "format": "float"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dorders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "List all orders",
                "operationId": "f8919e0169b1fe3c70274a711a8f7aad",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderWithUser"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dorders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details by ID",
                "operationId": "f7216c516ec202f207ffb3832bcb395f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderWithItems"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/api/order-items/{id}": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update the quantity of an order item",
                "operationId": "82bd0bc17e4e787db5d7b140f8f351f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order item updated with new total price",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "orderItem": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "type": "integer"
                                                },
                                                "medicine_name": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "totalPrice": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 150.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/check-payment-status/{paymentId}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Check payment status by payment ID",
                "operationId": "efd1ec66d01fc7c1b3b1d84aa428bc5b",
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "completed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payment/callback": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Handle payment gateway callback",
                "operationId": "9e86eee6bac3c42929238d6ad44a7795",
                "requestBody": {
                    "description": "Payment gateway callback data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "SUCCESS"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment successful, order processed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Payment failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Payment failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details by ID",
                "operationId": "4afa7b91d07466eea18e6d13f084878f",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "14ed2767c35ca9bb8f3dda05962bff41",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "operationId": "e80bbb0bb4997a6fe14dd28bba821c49",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "4506b52bd716c9d0b81fbc145d162b54",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "name_ar",
                                    "price",
                                    "stock",
                                    "category",
                                    "category_ar"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Painkiller"
                                    },
                                    "name_ar": {
                                        "type": "string",
                                        "example": "مسكن"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Used to relieve pain"
                                    },
                                    "description_ar": {
                                        "type": "string",
                                        "example": "يستخدم لتخفيف الألم"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15.99
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "images/painkiller.png"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Analgesics"
                                    },
                                    "category_ar": {
                                        "type": "string",
                                        "example": "مسكنات"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "operationId": "77a1cec46bed009086d350e06155d0e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Painkiller"
                                    },
                                    "name_ar": {
                                        "type": "string",
                                        "example": "مسكن"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Used to relieve pain"
                                    },
                                    "description_ar": {
                                        "type": "string",
                                        "example": "يستخدم لتخفيف الألم"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15.99
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "images/painkiller.png"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Analgesics"
                                    },
                                    "category_ar": {
                                        "type": "string",
                                        "example": "مسكنات"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        },
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/rare-medicine-requests/{id}": {
            "delete": {
                "tags": [
                    "Rare Medicine Requests"
                ],
                "summary": "Delete a rare medicine request by ID",
                "operationId": "230aa001e287d52f04eef53746ef12c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rare medicine request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rare-medicine-requests": {
            "get": {
                "tags": [
                    "Rare Medicine Requests"
                ],
                "summary": "Get all rare medicine requests",
                "operationId": "d4c60a275649f4dc5de026e01b9afa44",
                "responses": {
                    "200": {
                        "description": "List of rare medicine requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RareMedicineRequest"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user information",
                "operationId": "d2e0b62b677e406d7ca07cab8a8f950d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated user object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "jane@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "b33e530d6044392903f110f8f0e392ee",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted confirmation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of all users",
                "operationId": "db6e9204e238bd6ccceb3e55777ae7d2",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john@example.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+1234567890"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Feedback": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "feedback",
                    "rating",
                    "is_pinned"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "feedback": {
                        "type": "string",
                        "example": "Great service!"
                    },
                    "rating": {
                        "type": "integer",
                        "example": 5
                    },
                    "is_pinned": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "Medicine": {
                "required": [
                    "id",
                    "name",
                    "price",
                    "image_url"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Paracetamol"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 9.99
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/images/paracetamol.jpg"
                    }
                },
                "type": "object"
            },
            "DashboardNotification": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "is_read": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "id",
                    "name",
                    "name_ar",
                    "price",
                    "stock",
                    "category",
                    "category_ar"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Painkiller"
                    },
                    "name_ar": {
                        "type": "string",
                        "example": "مسكن"
                    },
                    "description": {
                        "type": "string",
                        "example": "Used to relieve pain"
                    },
                    "description_ar": {
                        "type": "string",
                        "example": "يستخدم لتخفيف الألم"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 15.99
                    },
                    "stock": {
                        "type": "integer",
                        "example": 100
                    },
                    "image_url": {
                        "type": "string",
                        "example": "images/painkiller.png"
                    },
                    "category": {
                        "type": "string",
                        "example": "Analgesics"
                    },
                    "category_ar": {
                        "type": "string",
                        "example": "مسكنات"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-15T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-15T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "RareMedicineRequest": {
                "required": [
                    "id",
                    "medicine_name",
                    "requested_by"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "medicine_name": {
                        "type": "string",
                        "example": "Unobtainium 500mg"
                    },
                    "requested_by": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-15T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-15T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "FavoriteWithProduct": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Sample Product"
                            },
                            "price": {
                                "type": "number",
                                "format": "float",
                                "example": 49.99
                            },
                            "description": {
                                "type": "string",
                                "example": "Product description here"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Order": {
                "required": [
                    "id",
                    "status",
                    "total_price"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-15T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-15T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "OrderWithItems": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Order"
                    },
                    {
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "Aspirin"
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 19.99
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrderWithUser": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Order"
                    },
                    {
                        "properties": {
                            "user": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Contact",
            "description": "Contact"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        },
        {
            "name": "Donation",
            "description": "Donation"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "Feedback",
            "description": "Feedback"
        },
        {
            "name": "Medicines",
            "description": "Medicines"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Rare Medicine Requests",
            "description": "Rare Medicine Requests"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}